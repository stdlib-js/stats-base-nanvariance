{"version":3,"file":"index.mjs","sources":["../lib/nanvariance.js","../lib/ndarray.js","../lib/main.js","../lib/index.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nanvariancepn = require( '@stdlib/stats-base-nanvariancepn' );\n\n\n// MAIN //\n\n/**\n* Computes the variance of a strided array ignoring `NaN` values.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @returns {number} variance\n*\n* @example\n* var x = [ 1.0, -2.0, NaN, 2.0 ];\n*\n* var v = nanvariance( x.length, 1, x, 1 );\n* // returns ~4.3333\n*/\nfunction nanvariance( N, correction, x, stride ) {\n\treturn nanvariancepn( N, correction, x, stride );\n}\n\n\n// EXPORTS //\n\nmodule.exports = nanvariance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar nanvariancepn = require( '@stdlib/stats-base-nanvariancepn' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Computes the variance of a strided array ignoring `NaN` values.\n*\n* @param {PositiveInteger} N - number of indexed elements\n* @param {number} correction - degrees of freedom adjustment\n* @param {NumericArray} x - input array\n* @param {integer} stride - stride length\n* @param {NonNegativeInteger} offset - starting index\n* @returns {number} variance\n*\n* @example\n* var floor = require( '@stdlib/math-base-special-floor' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0, NaN, NaN ];\n* var N = floor( x.length / 2 );\n*\n* var v = nanvariance( N, 1, x, 2, 1 );\n* // returns 6.25\n*/\nfunction nanvariance( N, correction, x, stride, offset ) {\n\treturn nanvariancepn( N, correction, x, stride, offset );\n}\n\n\n// EXPORTS //\n\nmodule.exports = nanvariance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar setReadOnly = require( '@stdlib/utils-define-nonenumerable-read-only-property' );\nvar nanvariance = require( './nanvariance.js' );\nvar ndarray = require( './ndarray.js' );\n\n\n// MAIN //\n\nsetReadOnly( nanvariance, 'ndarray', ndarray );\n\n\n// EXPORTS //\n\nmodule.exports = nanvariance;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2020 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Compute the variance of a strided array ignoring `NaN` values.\n*\n* @module @stdlib/stats-base-nanvariance\n*\n* @example\n* var nanvariance = require( '@stdlib/stats-base-nanvariance' );\n*\n* var x = [ 1.0, -2.0, NaN, 2.0 ];\n*\n* var v = nanvariance( x.length, 1, x, 1 );\n* // returns ~4.3333\n*\n* @example\n* var floor = require( '@stdlib/math-base-special-floor' );\n* var nanvariance = require( '@stdlib/stats-base-nanvariance' );\n*\n* var x = [ 2.0, 1.0, 2.0, -2.0, -2.0, 2.0, 3.0, 4.0, NaN, NaN ];\n* var N = floor( x.length / 2 );\n*\n* var v = nanvariance.ndarray( N, 1, x, 2, 1 );\n* // returns 6.25\n*/\n\n// MODULES //\n\nvar nanvariance = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = nanvariance;\n"],"names":["nanvariancepn","require$$0","nanvariance_1","N","correction","x","stride","ndarray","nanvariance","require$$1","offset","lib"],"mappings":";;6MAsBA,IAAIA,EAAgBC,EA2BpB,IAAAC,EAPA,SAAsBC,EAAGC,EAAYC,EAAGC,GACvC,OAAON,EAAeG,EAAGC,EAAYC,EAAGC,ICrBrCN,EAAgBC,EAA8CM,QA+BlE,IC9BAC,EAAAC,EADAR,EAOAO,EAAA,WDiBA,SAAsBL,EAAGC,EAAYC,EAAGC,EAAQI,GAC/C,OAAOV,EAAeG,EAAGC,EAAYC,EAAGC,EAAQI,MCbjD,ICiBAC,EDjBAH"}